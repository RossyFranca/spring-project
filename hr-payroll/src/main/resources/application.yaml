server:
  port: ${PORT:0}
spring:
  application:
    name: hr-payroll
    jackson.serialization.indent_output: true

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

resilience4j:
#https://atitudereflexiva.wordpress.com/2022/05/02/integrando-circuit-breaker-e-retry-com-resilience4j/
  retry:
    retry-aspect-order: 2  #determina que o retry aconte√ßa antes do circuitbreaker
    instances:
      paymentRetry:
        max-attempts: 3
        wait-duration: 4s
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
  circuitbreaker:
    retry-aspect-order: 1
    instances:
      paymentCircuitBracker:
        wait-duration-in-open-state: 1m
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-type: count-based
        sliding-window-size: 5
        minimum-number-of-calls: 5
        slow-call-duration-threshold: 10s
        slow-call-rate-threshold: 60
        failure-rate-threshold: 60
